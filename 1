local stages = import '../../../../../lib/workflow/stages.libsonnet';
local tmpl = import '../../template/event_viewer.jsonnet';
local cluster = import '../../prod/ph/event-viewer-prod.jsonnet';

function(docker_image_tag) {
  {
    display_name: 'Event Viewer Production deployment Stack',
    stages: [
      stages.DeployStacks(cluster(docker_image_tag), display_name='Deploy Event Viewer Prod [ph]')
    ]
  }
}




local tmpl = import '../../template/event_viewer.jsonnet';
local cluster = import './cluster.jsonnet';

function(docker_image_tag) {
  {
    cluster: cluster.name,
    stacks: {
      'event-viewer-prod': tmpl.EventViewerAppProd(
        tag=docker_image_tag,
        desired_replicas=1,
        min_replicas=1,
        max_replicas=1,
        bnd_cpu_percentage=cluster.bnd_cpu_percentage,
        alb_target_group_arn=cluster.alb_target_group_arn,
        alb_target_group_port=cluster.alb_target_group_port,
        rollout_phase='ROLLOUT_PHASE_PRODUCTION'
      )
    }
  }
}




jsonnet --ext-str docker_image_tag=defaultvt -S -e '(import "event-viewer-deployment_blueprint.jsonnet")(std.extVar("docker_image_tag"))'
